//--------------------------------------------------------------
// Grid-related mixins
// Flex grow, shrink, and basis required separate for IE11.
//--------------------------------------------------------------
@import '../variables/grid-var';

//-----------------------------------------
// https://flexgridlite.elliotdahl.com/
//-----------------------------------------

//-----------------------------------------
// Full Width
//-----------------------------------------
@mixin full-width {
	max-width: 100%;
	width: 100%;
}

// The Flex Grid
.grid {
	box-sizing: border-box;
	display: flex;
	flex: 0 1 auto;
	flex-direction: row;
	flex-wrap: wrap;
	margin: 0 calc(#{$gutter} * -1);

	// Use this modifier to remove gutters
	&.grid-nogutter {
		margin: 0;

		& > .col {
			padding: 0;
		}
	}

	// Modifications to work as expected inside a full-width section.
	.alignfull & {
		margin: 0;
	}
}

.col {
	@include margin(null null #{$gutter} null);
	@include padding(0 #{$gutter});

	box-sizing: border-box;
	flex: 0 0 auto;
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;
	min-width: 0;
}

.grid-column {
	flex-direction: column;
}


//-----------------------------------------
// Half or 50% grid element.
//-----------------------------------------
@mixin half {

	@include media($tablet-landscape) {
		flex-basis: calc(50% - #{rem(25)});
		flex-grow: 0;
		flex-shrink: 0;
		width: calc(50% - #{rem(25)}); // For IE11.
	}

	&:nth-child(odd) {
		@include margin(0 0 rem(25) 0);

		@include media($tablet-landscape) {
			@include margin(0 rem(50) 0 0);
		}
	} // &:first-child
}

//-----------------------------------------
// Third
//-----------------------------------------
@mixin third {
	@include margin(0 0 rem(25) 0);

	@include media($tablet-landscape) {
		@include margin(0 rem(50) rem(50) 0);

		flex: 0 0 calc(33.33% - #{rem(33.33)});
		width: calc(33.33% - #{rem(33.33)}); // For IE11.
	}

	&:nth-child(3n + 3) {
		@include margin(0 0 rem(50));

		@include media($tablet-landscape) {
			@include margin(0 0 rem(50));
		}
	} // &:first-child
}

//-----------------------------------------
// Quarter
//-----------------------------------------
@mixin quarter {
	@include margin(0 0 rem(25) 0);

	@include media($tablet-landscape) {
		@include margin(0 rem(50) rem(50) 0);

		flex: 0 0 calc(25% - #{rem(37.5)});
		width: calc(25% - #{rem(37.5)}); // For IE11.
	}

	&:nth-child(4n + 4) {
		@include margin(0 0 rem(50));

		@include media($tablet-landscape) {
			@include margin(0 0 rem(50));
		}
	} // &:first-child
}

// Column Modifiers //
// Column Vertical Alignment Classes
.col-align-top {
	align-self: flex-start;
}

.col-align-bottom {
	align-self: flex-end;
}

.col-align-middle {
	align-self: center;
}

// Column Content Alignment Classes
.col-top {
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
}

.col-bottom {
	display: flex;
	flex-direction: column;
	justify-content: flex-end;
}

.col-middle {
	display: flex;
	flex-direction: column;
	justify-content: center;
}

//Reordering Columns
.col-first {
	order: -1;
}

.col-last {
	order: 1;
}

// Horizontal Grid Alignment
.grid-start {
	justify-content: flex-start;
}

.grid-center {
	justify-content: center;
}

.grid-end {
	justify-content: flex-end;
}

// Column Distribution
.grid-around {
	justify-content: space-around;
}

.grid-between {
	justify-content: space-between;
}

// Reordering Columns
.grid-reverse {
	flex-direction: row-reverse;
}

// Column Sizing Classes //
// Fixed Column Class
// Give the column a min-width: ##px
.col-fixed {
	flex: initial;
}

// Can be used with .col-fixed to not collapse on mobile
// This WILL break a layout if your min-width is wider than the mobile device
.col-nocollapse {
	flex: 0;
}

// Grow Based Columns
@for $i from 2 through 11 {
	.col-grow-#{$i} {
		flex-grow: $i;
	}
}

// Percent Based Columns
@for $i from 1 through 12 {

	// Collapse columns to full width on mobile devices
	@media only screen and (min-width: $tablet-portrait) {
		.col-#{$i} {
			flex-basis: (100% / 12) * $i;
			max-width: (100% / 12) * $i;
		}
	}

	// Use a specific # of columns only on tablet portrait
	// Don't use .col-md-12 or .col-lg-12 to go full width, just use .col-md or .col-lg
	@media only screen and (min-width: $tablet-portrait) and (max-width: $tablet-landscape) {
		.col-md-#{$i} {
			flex-basis: (100% / 12) * $i;
			max-width: (100% / 12) * $i;
		}
	}

	// Use  a specific # of columns only on tablet landscape
	@media only screen and (min-width: $tablet-landscape) and (max-width: $desktop) {
		.col-lg-#{$i} {
			flex-basis: (100% / 12) * $i;
			max-width: (100% / 12) * $i;
		}
	}
}

// Collapse columns to full width at a specific breakpoint
@media only screen and (max-width: $tablet-portrait) {
	.col {
		flex: 100%;
		max-width: 100%;
	}
}

@media only screen and (max-width: $tablet-landscape) {
	.col-lg {
		flex: 100%;
		max-width: 100%;
	}
}
